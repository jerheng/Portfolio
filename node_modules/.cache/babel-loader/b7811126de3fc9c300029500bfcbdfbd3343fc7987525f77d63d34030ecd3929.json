{"ast":null,"code":"const ChainedMap = require('./ChainedMap');\nconst Orderable = require('./Orderable');\nmodule.exports = Orderable(class extends ChainedMap {\n  constructor(parent, name, type = 'plugin') {\n    super(parent);\n    this.name = name;\n    this.type = type;\n    this.extend(['init']);\n    this.init((Plugin, args = []) => {\n      if (typeof Plugin === 'function') {\n        return new Plugin(...args);\n      }\n      return Plugin;\n    });\n  }\n  use(plugin, args = []) {\n    return this.set('plugin', plugin).set('args', args);\n  }\n  tap(f) {\n    if (!this.has('plugin')) {\n      throw new Error(`Cannot call .tap() on a plugin that has not yet been defined. Call ${this.type}('${this.name}').use(<Plugin>) first.`);\n    }\n    this.set('args', f(this.get('args') || []));\n    return this;\n  }\n  set(key, value) {\n    if (key === 'args' && !Array.isArray(value)) {\n      throw new Error('args must be an array of arguments');\n    }\n    return super.set(key, value);\n  }\n  merge(obj, omit = []) {\n    if ('plugin' in obj) {\n      this.set('plugin', obj.plugin);\n    }\n    if ('args' in obj) {\n      this.set('args', obj.args);\n    }\n    return super.merge(obj, [...omit, 'args', 'plugin']);\n  }\n  toConfig() {\n    const init = this.get('init');\n    let plugin = this.get('plugin');\n    const args = this.get('args');\n    let pluginPath = null;\n    if (plugin === undefined) {\n      throw new Error(`Invalid ${this.type} configuration: ${this.type}('${this.name}').use(<Plugin>) was not called to specify the plugin`);\n    }\n\n    // Support using the path to a plugin rather than the plugin itself,\n    // allowing expensive require()s to be skipped in cases where the plugin\n    // or webpack configuration won't end up being used.\n    if (typeof plugin === 'string') {\n      pluginPath = plugin;\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      plugin = require(pluginPath);\n    }\n    const constructorName = plugin.__expression ? `(${plugin.__expression})` : plugin.name;\n    const config = init(plugin, args);\n    Object.defineProperties(config, {\n      __pluginName: {\n        value: this.name\n      },\n      __pluginType: {\n        value: this.type\n      },\n      __pluginArgs: {\n        value: args\n      },\n      __pluginConstructorName: {\n        value: constructorName\n      },\n      __pluginPath: {\n        value: pluginPath\n      }\n    });\n    return config;\n  }\n});","map":{"version":3,"names":["ChainedMap","require","Orderable","module","exports","constructor","parent","name","type","extend","init","Plugin","args","use","plugin","set","tap","f","has","Error","get","key","value","Array","isArray","merge","obj","omit","toConfig","pluginPath","undefined","constructorName","__expression","config","Object","defineProperties","__pluginName","__pluginType","__pluginArgs","__pluginConstructorName","__pluginPath"],"sources":["/Users/jeremyheng/Documents/GitHub/Portfolio/my-portfolio/node_modules/webpack-chain/src/Plugin.js"],"sourcesContent":["const ChainedMap = require('./ChainedMap');\nconst Orderable = require('./Orderable');\n\nmodule.exports = Orderable(\n  class extends ChainedMap {\n    constructor(parent, name, type = 'plugin') {\n      super(parent);\n      this.name = name;\n      this.type = type;\n      this.extend(['init']);\n\n      this.init((Plugin, args = []) => {\n        if (typeof Plugin === 'function') {\n          return new Plugin(...args);\n        }\n        return Plugin;\n      });\n    }\n\n    use(plugin, args = []) {\n      return this.set('plugin', plugin).set('args', args);\n    }\n\n    tap(f) {\n      if (!this.has('plugin')) {\n        throw new Error(\n          `Cannot call .tap() on a plugin that has not yet been defined. Call ${this.type}('${this.name}').use(<Plugin>) first.`,\n        );\n      }\n      this.set('args', f(this.get('args') || []));\n      return this;\n    }\n\n    set(key, value) {\n      if (key === 'args' && !Array.isArray(value)) {\n        throw new Error('args must be an array of arguments');\n      }\n      return super.set(key, value);\n    }\n\n    merge(obj, omit = []) {\n      if ('plugin' in obj) {\n        this.set('plugin', obj.plugin);\n      }\n\n      if ('args' in obj) {\n        this.set('args', obj.args);\n      }\n\n      return super.merge(obj, [...omit, 'args', 'plugin']);\n    }\n\n    toConfig() {\n      const init = this.get('init');\n      let plugin = this.get('plugin');\n      const args = this.get('args');\n      let pluginPath = null;\n\n      if (plugin === undefined) {\n        throw new Error(\n          `Invalid ${this.type} configuration: ${this.type}('${this.name}').use(<Plugin>) was not called to specify the plugin`,\n        );\n      }\n\n      // Support using the path to a plugin rather than the plugin itself,\n      // allowing expensive require()s to be skipped in cases where the plugin\n      // or webpack configuration won't end up being used.\n      if (typeof plugin === 'string') {\n        pluginPath = plugin;\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        plugin = require(pluginPath);\n      }\n\n      const constructorName = plugin.__expression\n        ? `(${plugin.__expression})`\n        : plugin.name;\n\n      const config = init(plugin, args);\n\n      Object.defineProperties(config, {\n        __pluginName: { value: this.name },\n        __pluginType: { value: this.type },\n        __pluginArgs: { value: args },\n        __pluginConstructorName: { value: constructorName },\n        __pluginPath: { value: pluginPath },\n      });\n\n      return config;\n    }\n  },\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}