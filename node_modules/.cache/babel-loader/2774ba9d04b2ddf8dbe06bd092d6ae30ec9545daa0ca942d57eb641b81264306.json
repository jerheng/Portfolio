{"ast":null,"code":"/**\n * @license lucide-vue-next v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { h } from 'vue';\nimport { toKebabCase } from './shared/src/utils.js';\nimport defaultAttributes from './defaultAttributes.js';\nconst Icon = ({\n  size,\n  strokeWidth = 2,\n  absoluteStrokeWidth,\n  color,\n  iconNode,\n  name,\n  class: classes,\n  ...props\n}, {\n  slots\n}) => {\n  return h(\"svg\", {\n    ...defaultAttributes,\n    width: size || defaultAttributes.width,\n    height: size || defaultAttributes.height,\n    stroke: color || defaultAttributes.stroke,\n    \"stroke-width\": absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n    class: [\"lucide\", `lucide-${toKebabCase(name ?? \"icon\")}`],\n    ...props\n  }, [...iconNode.map(child => h(...child)), ...(slots.default ? [slots.default()] : [])]);\n};\nexport { Icon as default };","map":{"version":3,"names":["Icon","size","strokeWidth","absoluteStrokeWidth","color","iconNode","name","class","classes","props","slots","h","defaultAttributes","width","height","stroke","Number","toKebabCase","map","child","default"],"sources":["../../src/Icon.ts"],"sourcesContent":["import { type FunctionalComponent, h } from 'vue';\nimport { mergeClasses, toKebabCase } from '@lucide/shared';\nimport defaultAttributes from './defaultAttributes';\nimport { IconNode, LucideProps } from './types';\n\ninterface IconProps {\n  iconNode: IconNode;\n  name: string;\n}\n\nconst Icon: FunctionalComponent<LucideProps & IconProps> = (\n  { size, strokeWidth = 2, absoluteStrokeWidth, color, iconNode, name, class: classes, ...props },\n  { slots },\n) => {\n  return h(\n    'svg',\n    {\n      ...defaultAttributes,\n      width: size || defaultAttributes.width,\n      height: size || defaultAttributes.height,\n      stroke: color || defaultAttributes.stroke,\n      'stroke-width': absoluteStrokeWidth ? (Number(strokeWidth) * 24) / Number(size) : strokeWidth,\n      class: ['lucide', `lucide-${toKebabCase(name ?? 'icon')}`],\n      ...props,\n    },\n    [...iconNode.map((child) => h(...child)), ...(slots.default ? [slots.default()] : [])],\n  );\n};\n\nexport default Icon;\n"],"mappings":";;;;;;;;;;AAUA,MAAMA,IAAA,GAAqDA,CACzD;EAAEC,IAAM;EAAAC,WAAA,GAAc;EAAGC,mBAAqB;EAAAC,KAAA;EAAOC,QAAU;EAAAC,IAAA;EAAMC,KAAA,EAAOC,OAAS;EAAA,GAAGC;AACxF;EAAEC;AAAA,CACC;EACI,OAAAC,CAAA,CACL,OACA;IACE,GAAGC,iBAAA;IACHC,KAAA,EAAOZ,IAAA,IAAQW,iBAAkB,CAAAC,KAAA;IACjCC,MAAA,EAAQb,IAAA,IAAQW,iBAAkB,CAAAE,MAAA;IAClCC,MAAA,EAAQX,KAAA,IAASQ,iBAAkB,CAAAG,MAAA;IACnC,gBAAgBZ,mBAAA,GAAuBa,MAAO,CAAAd,WAAW,IAAI,EAAM,GAAAc,MAAA,CAAOf,IAAI,CAAI,GAAAC,WAAA;IAClFK,KAAA,EAAO,CAAC,QAAU,YAAUU,WAAA,CAAYX,IAAQ,UAAM,CAAC,EAAE;IACzD,GAAGG;EACL,GACA,CAAC,GAAGJ,QAAS,CAAAa,GAAA,CAAKC,KAAU,IAAAR,CAAA,CAAE,GAAGQ,KAAK,CAAC,GAAG,IAAIT,KAAA,CAAMU,OAAA,GAAU,CAACV,KAAA,CAAMU,OAAA,EAAS,IAAI,EAAG,GACvF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}