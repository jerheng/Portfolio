{"ast":null,"code":"/* jshint node: true */\n'use strict';\n\nvar REGEXP_PARTS = /(\\*|\\?)/g;\n\n/**\n  # wildcard\n\n  Very simple wildcard matching, which is designed to provide the same\n  functionality that is found in the\n  [eve](https://github.com/adobe-webplatform/eve) eventing library.\n\n  ## Usage\n\n  It works with strings:\n\n  <<< examples/strings.js\n\n  Arrays:\n\n  <<< examples/arrays.js\n\n  Objects (matching against keys):\n\n  <<< examples/objects.js\n\n  ## Alternative Implementations\n\n  - <https://github.com/isaacs/node-glob>\n\n    Great for full file-based wildcard matching.\n\n  - <https://github.com/sindresorhus/matcher>\n\n     A well cared for and loved JS wildcard matcher.\n**/\n\nfunction WildcardMatcher(text, separator) {\n  this.text = text = text || '';\n  this.hasWild = text.indexOf('*') >= 0;\n  this.separator = separator;\n  this.parts = text.split(separator).map(this.classifyPart.bind(this));\n}\nWildcardMatcher.prototype.match = function (input) {\n  var matches = true;\n  var parts = this.parts;\n  var ii;\n  var partsCount = parts.length;\n  var testParts;\n  if (typeof input == 'string' || input instanceof String) {\n    if (!this.hasWild && this.text != input) {\n      matches = false;\n    } else {\n      testParts = (input || '').split(this.separator);\n      for (ii = 0; matches && ii < partsCount; ii++) {\n        if (parts[ii] === '*') {\n          continue;\n        } else if (ii < testParts.length) {\n          matches = parts[ii] instanceof RegExp ? parts[ii].test(testParts[ii]) : parts[ii] === testParts[ii];\n        } else {\n          matches = false;\n        }\n      }\n\n      // If matches, then return the component parts\n      matches = matches && testParts;\n    }\n  } else if (typeof input.splice == 'function') {\n    matches = [];\n    for (ii = input.length; ii--;) {\n      if (this.match(input[ii])) {\n        matches[matches.length] = input[ii];\n      }\n    }\n  } else if (typeof input == 'object') {\n    matches = {};\n    for (var key in input) {\n      if (this.match(key)) {\n        matches[key] = input[key];\n      }\n    }\n  }\n  return matches;\n};\nWildcardMatcher.prototype.classifyPart = function (part) {\n  // in the event that we have been provided a part that is not just a wildcard\n  // then turn this into a regular expression for matching purposes\n  if (part === '*') {\n    return part;\n  } else if (part.indexOf('*') >= 0 || part.indexOf('?') >= 0) {\n    return new RegExp(part.replace(REGEXP_PARTS, '\\.$1'));\n  }\n  return part;\n};\nmodule.exports = function (text, test, separator) {\n  var matcher = new WildcardMatcher(text, separator || /[\\/\\.]/);\n  if (typeof test != 'undefined') {\n    return matcher.match(test);\n  }\n  return matcher;\n};","map":{"version":3,"names":["REGEXP_PARTS","WildcardMatcher","text","separator","hasWild","indexOf","parts","split","map","classifyPart","bind","prototype","match","input","matches","ii","partsCount","length","testParts","String","RegExp","test","splice","key","part","replace","module","exports","matcher"],"sources":["/Users/jeremyheng/Documents/GitHub/Portfolio/my-portfolio/node_modules/wildcard/index.js"],"sourcesContent":["/* jshint node: true */\n'use strict';\n\nvar REGEXP_PARTS = /(\\*|\\?)/g;\n\n/**\n  # wildcard\n\n  Very simple wildcard matching, which is designed to provide the same\n  functionality that is found in the\n  [eve](https://github.com/adobe-webplatform/eve) eventing library.\n\n  ## Usage\n\n  It works with strings:\n\n  <<< examples/strings.js\n\n  Arrays:\n\n  <<< examples/arrays.js\n\n  Objects (matching against keys):\n\n  <<< examples/objects.js\n\n  ## Alternative Implementations\n\n  - <https://github.com/isaacs/node-glob>\n\n    Great for full file-based wildcard matching.\n\n  - <https://github.com/sindresorhus/matcher>\n\n     A well cared for and loved JS wildcard matcher.\n**/\n\nfunction WildcardMatcher(text, separator) {\n  this.text = text = text || '';\n  this.hasWild = text.indexOf('*') >= 0;\n  this.separator = separator;\n  this.parts = text.split(separator).map(this.classifyPart.bind(this));\n}\n\nWildcardMatcher.prototype.match = function(input) {\n  var matches = true;\n  var parts = this.parts;\n  var ii;\n  var partsCount = parts.length;\n  var testParts;\n\n  if (typeof input == 'string' || input instanceof String) {\n    if (!this.hasWild && this.text != input) {\n      matches = false;\n    } else {\n      testParts = (input || '').split(this.separator);\n      for (ii = 0; matches && ii < partsCount; ii++) {\n        if (parts[ii] === '*')  {\n          continue;\n        } else if (ii < testParts.length) {\n          matches = parts[ii] instanceof RegExp\n            ? parts[ii].test(testParts[ii])\n            : parts[ii] === testParts[ii];\n        } else {\n          matches = false;\n        }\n      }\n\n      // If matches, then return the component parts\n      matches = matches && testParts;\n    }\n  }\n  else if (typeof input.splice == 'function') {\n    matches = [];\n\n    for (ii = input.length; ii--; ) {\n      if (this.match(input[ii])) {\n        matches[matches.length] = input[ii];\n      }\n    }\n  }\n  else if (typeof input == 'object') {\n    matches = {};\n\n    for (var key in input) {\n      if (this.match(key)) {\n        matches[key] = input[key];\n      }\n    }\n  }\n\n  return matches;\n};\n\nWildcardMatcher.prototype.classifyPart = function(part) {\n  // in the event that we have been provided a part that is not just a wildcard\n  // then turn this into a regular expression for matching purposes\n  if (part === '*') {\n    return part;\n  } else if (part.indexOf('*') >= 0 || part.indexOf('?') >= 0) {\n    return new RegExp(part.replace(REGEXP_PARTS, '\\.$1'));\n  }\n\n  return part;\n};\n\nmodule.exports = function(text, test, separator) {\n  var matcher = new WildcardMatcher(text, separator || /[\\/\\.]/);\n  if (typeof test != 'undefined') {\n    return matcher.match(test);\n  }\n\n  return matcher;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}