{"ast":null,"code":"require(\"core-js/modules/es.set.difference.v2.js\");\nrequire(\"core-js/modules/es.set.intersection.v2.js\");\nrequire(\"core-js/modules/es.set.is-disjoint-from.v2.js\");\nrequire(\"core-js/modules/es.set.is-subset-of.v2.js\");\nrequire(\"core-js/modules/es.set.is-superset-of.v2.js\");\nrequire(\"core-js/modules/es.set.symmetric-difference.v2.js\");\nrequire(\"core-js/modules/es.set.union.v2.js\");\nconst Chainable = require('./Chainable');\nmodule.exports = class extends Chainable {\n  constructor(parent) {\n    super(parent);\n    this.store = new Set();\n  }\n  add(value) {\n    this.store.add(value);\n    return this;\n  }\n  prepend(value) {\n    this.store = new Set([value, ...this.store]);\n    return this;\n  }\n  clear() {\n    this.store.clear();\n    return this;\n  }\n  delete(value) {\n    this.store.delete(value);\n    return this;\n  }\n  values() {\n    return [...this.store];\n  }\n  has(value) {\n    return this.store.has(value);\n  }\n  merge(arr) {\n    this.store = new Set([...this.store, ...arr]);\n    return this;\n  }\n  when(condition, whenTruthy = Function.prototype, whenFalsy = Function.prototype) {\n    if (condition) {\n      whenTruthy(this);\n    } else {\n      whenFalsy(this);\n    }\n    return this;\n  }\n};","map":{"version":3,"names":["Chainable","require","module","exports","constructor","parent","store","Set","add","value","prepend","clear","delete","values","has","merge","arr","when","condition","whenTruthy","Function","prototype","whenFalsy"],"sources":["/Users/jeremyheng/Documents/GitHub/Portfolio/my-portfolio/node_modules/webpack-chain/src/ChainedSet.js"],"sourcesContent":["const Chainable = require('./Chainable');\n\nmodule.exports = class extends Chainable {\n  constructor(parent) {\n    super(parent);\n    this.store = new Set();\n  }\n\n  add(value) {\n    this.store.add(value);\n    return this;\n  }\n\n  prepend(value) {\n    this.store = new Set([value, ...this.store]);\n    return this;\n  }\n\n  clear() {\n    this.store.clear();\n    return this;\n  }\n\n  delete(value) {\n    this.store.delete(value);\n    return this;\n  }\n\n  values() {\n    return [...this.store];\n  }\n\n  has(value) {\n    return this.store.has(value);\n  }\n\n  merge(arr) {\n    this.store = new Set([...this.store, ...arr]);\n    return this;\n  }\n\n  when(\n    condition,\n    whenTruthy = Function.prototype,\n    whenFalsy = Function.prototype,\n  ) {\n    if (condition) {\n      whenTruthy(this);\n    } else {\n      whenFalsy(this);\n    }\n\n    return this;\n  }\n};\n"],"mappings":";;;;;;;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAExCC,MAAM,CAACC,OAAO,GAAG,cAAcH,SAAS,CAAC;EACvCI,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxB;EAEAC,GAAGA,CAACC,KAAK,EAAE;IACT,IAAI,CAACH,KAAK,CAACE,GAAG,CAACC,KAAK,CAAC;IACrB,OAAO,IAAI;EACb;EAEAC,OAAOA,CAACD,KAAK,EAAE;IACb,IAAI,CAACH,KAAK,GAAG,IAAIC,GAAG,CAAC,CAACE,KAAK,EAAE,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC;IAC5C,OAAO,IAAI;EACb;EAEAK,KAAKA,CAAA,EAAG;IACN,IAAI,CAACL,KAAK,CAACK,KAAK,CAAC,CAAC;IAClB,OAAO,IAAI;EACb;EAEAC,MAAMA,CAACH,KAAK,EAAE;IACZ,IAAI,CAACH,KAAK,CAACM,MAAM,CAACH,KAAK,CAAC;IACxB,OAAO,IAAI;EACb;EAEAI,MAAMA,CAAA,EAAG;IACP,OAAO,CAAC,GAAG,IAAI,CAACP,KAAK,CAAC;EACxB;EAEAQ,GAAGA,CAACL,KAAK,EAAE;IACT,OAAO,IAAI,CAACH,KAAK,CAACQ,GAAG,CAACL,KAAK,CAAC;EAC9B;EAEAM,KAAKA,CAACC,GAAG,EAAE;IACT,IAAI,CAACV,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACD,KAAK,EAAE,GAAGU,GAAG,CAAC,CAAC;IAC7C,OAAO,IAAI;EACb;EAEAC,IAAIA,CACFC,SAAS,EACTC,UAAU,GAAGC,QAAQ,CAACC,SAAS,EAC/BC,SAAS,GAAGF,QAAQ,CAACC,SAAS,EAC9B;IACA,IAAIH,SAAS,EAAE;MACbC,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACLG,SAAS,CAAC,IAAI,CAAC;IACjB;IAEA,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}