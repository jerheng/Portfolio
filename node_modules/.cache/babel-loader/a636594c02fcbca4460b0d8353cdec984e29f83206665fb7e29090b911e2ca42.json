{"ast":null,"code":"const ChainedMap = require('./ChainedMap');\nconst ChainedSet = require('./ChainedSet');\nconst Orderable = require('./Orderable');\nconst Use = require('./Use');\nconst Resolve = require('./Resolve');\nfunction toArray(arr) {\n  return Array.isArray(arr) ? arr : [arr];\n}\nconst Rule = Orderable(class extends ChainedMap {\n  constructor(parent, name, ruleType = 'rule') {\n    super(parent);\n    this.name = name;\n    this.names = [];\n    this.ruleType = ruleType;\n    this.ruleTypes = [];\n    let rule = this;\n    while (rule instanceof Rule) {\n      this.names.unshift(rule.name);\n      this.ruleTypes.unshift(rule.ruleType);\n      rule = rule.parent;\n    }\n    this.uses = new ChainedMap(this);\n    this.include = new ChainedSet(this);\n    this.exclude = new ChainedSet(this);\n    this.rules = new ChainedMap(this);\n    this.oneOfs = new ChainedMap(this);\n    this.resolve = new Resolve(this);\n    this.extend(['enforce', 'issuer', 'parser', 'resource', 'resourceQuery', 'sideEffects', 'test', 'type']);\n  }\n  use(name) {\n    return this.uses.getOrCompute(name, () => new Use(this, name));\n  }\n  rule(name) {\n    return this.rules.getOrCompute(name, () => new Rule(this, name, 'rule'));\n  }\n  oneOf(name) {\n    return this.oneOfs.getOrCompute(name, () => new Rule(this, name, 'oneOf'));\n  }\n  pre() {\n    return this.enforce('pre');\n  }\n  post() {\n    return this.enforce('post');\n  }\n  toConfig() {\n    const config = this.clean(Object.assign(this.entries() || {}, {\n      include: this.include.values(),\n      exclude: this.exclude.values(),\n      rules: this.rules.values().map(rule => rule.toConfig()),\n      oneOf: this.oneOfs.values().map(oneOf => oneOf.toConfig()),\n      use: this.uses.values().map(use => use.toConfig()),\n      resolve: this.resolve.toConfig()\n    }));\n    Object.defineProperties(config, {\n      __ruleNames: {\n        value: this.names\n      },\n      __ruleTypes: {\n        value: this.ruleTypes\n      }\n    });\n    return config;\n  }\n  merge(obj, omit = []) {\n    if (!omit.includes('include') && 'include' in obj) {\n      this.include.merge(toArray(obj.include));\n    }\n    if (!omit.includes('exclude') && 'exclude' in obj) {\n      this.exclude.merge(toArray(obj.exclude));\n    }\n    if (!omit.includes('use') && 'use' in obj) {\n      Object.keys(obj.use).forEach(name => this.use(name).merge(obj.use[name]));\n    }\n    if (!omit.includes('rules') && 'rules' in obj) {\n      Object.keys(obj.rules).forEach(name => this.rule(name).merge(obj.rules[name]));\n    }\n    if (!omit.includes('oneOf') && 'oneOf' in obj) {\n      Object.keys(obj.oneOf).forEach(name => this.oneOf(name).merge(obj.oneOf[name]));\n    }\n    if (!omit.includes('resolve') && 'resolve' in obj) {\n      this.resolve.merge(obj.resolve);\n    }\n    if (!omit.includes('test') && 'test' in obj) {\n      this.test(obj.test instanceof RegExp || typeof obj.test === 'function' ? obj.test : new RegExp(obj.test));\n    }\n    return super.merge(obj, [...omit, 'include', 'exclude', 'use', 'rules', 'oneOf', 'resolve', 'test']);\n  }\n});\nmodule.exports = Rule;","map":{"version":3,"names":["ChainedMap","require","ChainedSet","Orderable","Use","Resolve","toArray","arr","Array","isArray","Rule","constructor","parent","name","ruleType","names","ruleTypes","rule","unshift","uses","include","exclude","rules","oneOfs","resolve","extend","use","getOrCompute","oneOf","pre","enforce","post","toConfig","config","clean","Object","assign","entries","values","map","defineProperties","__ruleNames","value","__ruleTypes","merge","obj","omit","includes","keys","forEach","test","RegExp","module","exports"],"sources":["/Users/jeremyheng/Documents/GitHub/Portfolio/my-portfolio/node_modules/webpack-chain/src/Rule.js"],"sourcesContent":["const ChainedMap = require('./ChainedMap');\nconst ChainedSet = require('./ChainedSet');\nconst Orderable = require('./Orderable');\nconst Use = require('./Use');\nconst Resolve = require('./Resolve');\n\nfunction toArray(arr) {\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nconst Rule = Orderable(\n  class extends ChainedMap {\n    constructor(parent, name, ruleType = 'rule') {\n      super(parent);\n      this.name = name;\n      this.names = [];\n      this.ruleType = ruleType;\n      this.ruleTypes = [];\n\n      let rule = this;\n      while (rule instanceof Rule) {\n        this.names.unshift(rule.name);\n        this.ruleTypes.unshift(rule.ruleType);\n        rule = rule.parent;\n      }\n\n      this.uses = new ChainedMap(this);\n      this.include = new ChainedSet(this);\n      this.exclude = new ChainedSet(this);\n      this.rules = new ChainedMap(this);\n      this.oneOfs = new ChainedMap(this);\n      this.resolve = new Resolve(this);\n      this.extend([\n        'enforce',\n        'issuer',\n        'parser',\n        'resource',\n        'resourceQuery',\n        'sideEffects',\n        'test',\n        'type',\n      ]);\n    }\n\n    use(name) {\n      return this.uses.getOrCompute(name, () => new Use(this, name));\n    }\n\n    rule(name) {\n      return this.rules.getOrCompute(name, () => new Rule(this, name, 'rule'));\n    }\n\n    oneOf(name) {\n      return this.oneOfs.getOrCompute(\n        name,\n        () => new Rule(this, name, 'oneOf'),\n      );\n    }\n\n    pre() {\n      return this.enforce('pre');\n    }\n\n    post() {\n      return this.enforce('post');\n    }\n\n    toConfig() {\n      const config = this.clean(\n        Object.assign(this.entries() || {}, {\n          include: this.include.values(),\n          exclude: this.exclude.values(),\n          rules: this.rules.values().map((rule) => rule.toConfig()),\n          oneOf: this.oneOfs.values().map((oneOf) => oneOf.toConfig()),\n          use: this.uses.values().map((use) => use.toConfig()),\n          resolve: this.resolve.toConfig(),\n        }),\n      );\n\n      Object.defineProperties(config, {\n        __ruleNames: { value: this.names },\n        __ruleTypes: { value: this.ruleTypes },\n      });\n\n      return config;\n    }\n\n    merge(obj, omit = []) {\n      if (!omit.includes('include') && 'include' in obj) {\n        this.include.merge(toArray(obj.include));\n      }\n\n      if (!omit.includes('exclude') && 'exclude' in obj) {\n        this.exclude.merge(toArray(obj.exclude));\n      }\n\n      if (!omit.includes('use') && 'use' in obj) {\n        Object.keys(obj.use).forEach((name) =>\n          this.use(name).merge(obj.use[name]),\n        );\n      }\n\n      if (!omit.includes('rules') && 'rules' in obj) {\n        Object.keys(obj.rules).forEach((name) =>\n          this.rule(name).merge(obj.rules[name]),\n        );\n      }\n\n      if (!omit.includes('oneOf') && 'oneOf' in obj) {\n        Object.keys(obj.oneOf).forEach((name) =>\n          this.oneOf(name).merge(obj.oneOf[name]),\n        );\n      }\n\n      if (!omit.includes('resolve') && 'resolve' in obj) {\n        this.resolve.merge(obj.resolve);\n      }\n\n      if (!omit.includes('test') && 'test' in obj) {\n        this.test(\n          obj.test instanceof RegExp || typeof obj.test === 'function'\n            ? obj.test\n            : new RegExp(obj.test),\n        );\n      }\n\n      return super.merge(obj, [\n        ...omit,\n        'include',\n        'exclude',\n        'use',\n        'rules',\n        'oneOf',\n        'resolve',\n        'test',\n      ]);\n    }\n  },\n);\n\nmodule.exports = Rule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}